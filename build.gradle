buildscript {
  repositories {
    mavenCentral()
    maven { url 'https://s01.oss.sonatype.org' }
    gradlePluginPortal()
    mavenLocal()
    google()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
    maven { url "https://plugins.gradle.org/m2/" }
  }
  dependencies {
  }
}

plugins {
  id 'java-library'
  id 'eclipse'
  id 'idea'
}

repositories {
  mavenCentral()
  maven { url 'https://s01.oss.sonatype.org' }
  maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
  maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
  mavenLocal()
  google()
}

tasks.register('generateAssetList') {
  inputs.dir("${project.rootDir}/assets/")
  File assetsFolder = new File("${project.rootDir}/assets/")
  File assetsFile = new File(assetsFolder, "assets.txt")
  assetsFile.delete()
  fileTree(assetsFolder).collect { assetsFolder.relativePath(it) }.sort().each {
    assetsFile.append(it + "\n")
  }
}
processResources.dependsOn 'generateAssetList'

compileJava {
  options.incremental = true
}

allprojects {
  apply plugin: 'eclipse'
  apply plugin: 'idea'

  // This allows you to "Build and run using IntelliJ IDEA", an option in IDEA's Settings.
  idea {
    module {
      outputDir file('build/classes/java/main')
      testOutputDir file('build/classes/java/test')
    }
  }
}

configure(subprojects) {
  apply plugin: 'java-library'
  sourceCompatibility = 8

  // From https://lyze.dev/2021/04/29/libGDX-Internal-Assets-List/
  // The article can be helpful when using assets.txt in your project.
  tasks.register('generateAssetList') {
    inputs.dir("${project.rootDir}/assets/")
    // projectFolder/assets
    File assetsFolder = new File("${project.rootDir}/assets/")
    // projectFolder/assets/assets.txt
    File assetsFile = new File(assetsFolder, "assets.txt")
    // delete that file in case we've already created it
    assetsFile.delete()

    // iterate through all files inside that folder
    // convert it to a relative path
    // and append it to the file assets.txt
    fileTree(assetsFolder).collect { assetsFolder.relativePath(it) }.sort().each {
      assetsFile.append(it + "\n")
    }
  }
  processResources.dependsOn 'generateAssetList'

  compileJava {
    options.incremental = true
  }
}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(8) // ou 11, conforme necess√°rio
  }
}


subprojects {
  version = '$projectVersion'
  ext.appName = 't2-Paradigmas'
  repositories {
    mavenCentral()
    maven { url 'https://s01.oss.sonatype.org' }
    // You may want to remove the following line if you have errors downloading dependencies.
    mavenLocal()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://jitpack.io' }
  }

  dependencies {
    implementation 'org.projectlombok:lombok:1.18.30' // Lombok
    annotationProcessor 'org.projectlombok:lombok:1.18.30' // Annotation Processor
    implementation "com.badlogicgames.gdx:gdx:1.13.0"
    implementation "com.badlogicgames.gdx:gdx-freetype:1.13.0"
    implementation "com.badlogicgames.gdx:gdx-freetype-platform:1.13.0:natives-desktop"
    implementation 'com.google.code.gson:gson:2.11.0'
  }
}

eclipse.project.name = 't2-Paradigmas' + '-parent'
